{"version":3,"names":["DeviceEventEmitter","NativeEventEmitter","NativeModules","Platform","LINKING_ERROR","select","ios","default","SmartechEventEmitter","SmartechPushReactEventEmitter","SmartechPushReactNative","Proxy","get","Error","defaultCallback","method","err","res","console","log","callWithCallback","args","callback","push","apply","parseNestedJSON","data","JSON","parse","error","processNestedData","key","String","toUpperCase","eventMap","SmartechReact","SmartechNotificationReceived","SmartechDeeplinkNotification","addListener","eventName","handler","eventEmitter","removeListener","remove","getDeepLinkUrl","requestNotificationPermission","updateNotificationPermission","pnPermissionStatus","optPushNotification","isPushNotificationOpted","hasOptedPushNotification","getDevicePushToken","setDevicePushToken","token","handlePushNotification","notificationData","parsedData","stringify","registerForPushNotificationWithAuthorizationOptions","enableAlert","enableBadge","enableSound","addNotificationListener","module","exports"],"sources":["index.tsx"],"sourcesContent":["import { DeviceEventEmitter, EmitterSubscription, NativeEventEmitter, NativeModules, Platform } from 'react-native';\n\nconst LINKING_ERROR =\n  `The package 'smartech-push-react-native' doesn't seem to be linked. Make sure: \\n\\n` +\n  Platform.select({ ios: \"- You have run 'pod install'\\n\", default: '' }) +\n  '- You rebuilt the app after installing the package\\n' +\n  '- You are not using Expo managed workflow\\n';\n\nconst SmartechEventEmitter = NativeModules.SmartechPushReactEventEmitter ? new NativeEventEmitter(NativeModules.SmartechPushReactEventEmitter) : DeviceEventEmitter;\nconst SmartechPushReactNative = NativeModules.SmartechPushReactNative\n  ? NativeModules.SmartechPushReactNative\n  : new Proxy(\n      {},\n      {\n        get() {\n          throw new Error(LINKING_ERROR);\n        },\n      }\n    );\n\nfunction defaultCallback(method: string, err: any, res: any) {\n  if (err) {\n      console.log('Smartech ' + method + ' default callback error', err);\n  }\n  else {\n      console.log('Smartech ' + method + ' default callback result', res);\n  }\n}\n\n// Used to handle callback\nfunction callWithCallback(this: any, method: string, args: any[] | null, callback: ((err: any, res: any) => void) | null) {\n  if (typeof callback === 'undefined' || callback == null || typeof callback !== 'function') {\n      callback = (err, res) => {\n          defaultCallback(method, err, res);\n      };\n  }\n  if (args == null) {\n      args = [];\n  }\n  args.push(callback);\n  SmartechPushReactNative[method].apply(this, args);\n}\n\nconst parseNestedJSON = (data: any) => {\n  try {\n    return JSON.parse(data);\n  } catch (error) {\n    return data; // Return the original string if parsing fails\n  }\n};\n\nconst processNestedData = (data: any) => {\n  for (const key in data) {\n    if (typeof data[key] === 'object' && data[key] !== null) {\n      // If the value is an object (nested), call the function recursively\n      data[key] = processNestedData(data[key]);\n    } else if (typeof data[key] === 'string') {\n      // If the value is a string, attempt to parse it as JSON\n      data[key] = parseNestedJSON(data[key]);\n    } else {\n      // Perform any necessary processing for non-string values\n      data[key] = String(data[key]).toUpperCase();\n    }\n  }\n\n  return data;\n};\n\ninterface EventMapObject {\n  [key: string]: any;\n}\nconst eventMap : EventMapObject = {};\n\nvar SmartechReact = {\n      \n    // All the constants declared in the Smartech React Bridge.\n    SmartechNotificationReceived: SmartechPushReactNative.SmartechNotificationReceived,\n\n    // For legacy support\n    SmartechDeeplinkNotification: SmartechPushReactNative.SmartechDeeplinkNotification,\n\n    // This method is used to register listener.\n    addListener: function (eventName: string, handler: (data: any) => void) {\n      if (SmartechEventEmitter) {\n        const eventEmitter = SmartechEventEmitter.addListener(eventName, handler);\n        eventMap[eventName] = eventEmitter;\n      }\n    },\n\n    // This method is used to unregister registered listener.\n    removeListener: function (eventName: string) {\n        eventMap[eventName].remove();\n    },\n\n    /**\n     *  This method will be used to handle the deeplink\n     *  used to open the app.\n     */\n     getDeepLinkUrl: function (callback: ((err: any, res: any) => void) | null) {\n      callWithCallback('getDeepLinkUrl', null, callback);\n    },\n\n\n    /**\n     * Exposed method to request the Notification Permission\n     * @param : Callback interface for getting status of Notification permission.\n    */\n     requestNotificationPermission: function (callback: ((err: any, res: any) => void) | null) {\n        callWithCallback('requestNotificationPermission', null, callback);\n     },\n\n    /**\n     * Exposed method to update the Notification Permission status\n     * @param pnPermissionStatus: status of permission either enabled (1) or\n     * disabled (0)\n     */\n      updateNotificationPermission: function (pnPermissionStatus: number) {\n      SmartechPushReactNative.updateNotificationPermission(pnPermissionStatus);\n    },\n    \n\n    // ----- GDPR Methods ----- \n\n    /**\n     * This method is used to opt push notifications.\n     * If you call this method then we will opt in or opt out the user of recieving push notifications.\n     */\n    optPushNotification: function (isPushNotificationOpted: boolean) {\n      SmartechPushReactNative.optPushNotification(isPushNotificationOpted);\n    },\n\n    /**\n     * This method is used to get the current status of opt push notification.\n     * If you call this method you will get the current status of the tracking which can be used to render the UI at app level.\n     */\n    hasOptedPushNotification: function (callback: ((err: any, res: any) => void) | null) {\n        callWithCallback('hasOptedPushNotification', null, callback);\n    },\n\n    // ----- Helper Methods ----- \n\n    /**\n     * This method is used to get the device push token used by Smartech SDK.\n     * If you call this method you will get the device push token which is used for sending push notification.\n     */\n    getDevicePushToken: function (callback: ((err: any, res: any) => void) | null) {\n        callWithCallback('getDevicePushToken', null, callback);\n    },\n\n    /**\n     * This method is used to set the device push token used by Smartech SDK.\n     * If you call this method you will set the device push token which is used for sending push notification.\n     */\n    setDevicePushToken: function (token: string) {\n      SmartechPushReactNative.setDevicePushToken(token);\n    },\n\n     /**\n     * This method is used to handle notification by Smartech SDK.\n     */\n    handlePushNotification: function (notificationData: object, callback: ((err: any, res: any) => void) | null) {\n      // const _notificationdata = JSON.parse(notificationData);\n      const parsedData = processNestedData(notificationData)\n      console.log(\"processed data :: \", JSON.stringify(parsedData))\n      callWithCallback('handlePushNotification', [JSON.stringify(parsedData)], callback);\n      },\n\n    registerForPushNotificationWithAuthorizationOptions: function (enableAlert: boolean, enableBadge: boolean, enableSound: boolean) {\n      SmartechPushReactNative.registerForPushNotificationWithAuthorizationOptions(enableAlert, enableBadge, enableSound);\n    },\n    \n    // This method is used to register notification listener.\n    addNotificationListener: function (eventName: string, handler: (data: any) => void, callback: (arg0: EmitterSubscription) => void) {\n      if (SmartechEventEmitter) {\n        const eventEmitter = SmartechEventEmitter.addListener(eventName, handler);\n        callback(eventEmitter)\n      }\n    }\n};\n\nmodule.exports = SmartechReact;\n\n"],"mappings":"AAAA,SAASA,kBAAkB,EAAuBC,kBAAkB,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,cAAc;AAEnH,MAAMC,aAAa,GAChB,qFAAoF,GACrFD,QAAQ,CAACE,MAAM,CAAC;EAAEC,GAAG,EAAE,gCAAgC;EAAEC,OAAO,EAAE;AAAG,CAAC,CAAC,GACvE,sDAAsD,GACtD,6CAA6C;AAE/C,MAAMC,oBAAoB,GAAGN,aAAa,CAACO,6BAA6B,GAAG,IAAIR,kBAAkB,CAACC,aAAa,CAACO,6BAA6B,CAAC,GAAGT,kBAAkB;AACnK,MAAMU,uBAAuB,GAAGR,aAAa,CAACQ,uBAAuB,GACjER,aAAa,CAACQ,uBAAuB,GACrC,IAAIC,KAAK,CACP,CAAC,CAAC,EACF;EACEC,GAAGA,CAAA,EAAG;IACJ,MAAM,IAAIC,KAAK,CAACT,aAAa,CAAC;EAChC;AACF,CACF,CAAC;AAEL,SAASU,eAAeA,CAACC,MAAc,EAAEC,GAAQ,EAAEC,GAAQ,EAAE;EAC3D,IAAID,GAAG,EAAE;IACLE,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGJ,MAAM,GAAG,yBAAyB,EAAEC,GAAG,CAAC;EACtE,CAAC,MACI;IACDE,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGJ,MAAM,GAAG,0BAA0B,EAAEE,GAAG,CAAC;EACvE;AACF;;AAEA;AACA,SAASG,gBAAgBA,CAAYL,MAAc,EAAEM,IAAkB,EAAEC,QAA+C,EAAE;EACxH,IAAI,OAAOA,QAAQ,KAAK,WAAW,IAAIA,QAAQ,IAAI,IAAI,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;IACvFA,QAAQ,GAAGA,CAACN,GAAG,EAAEC,GAAG,KAAK;MACrBH,eAAe,CAACC,MAAM,EAAEC,GAAG,EAAEC,GAAG,CAAC;IACrC,CAAC;EACL;EACA,IAAII,IAAI,IAAI,IAAI,EAAE;IACdA,IAAI,GAAG,EAAE;EACb;EACAA,IAAI,CAACE,IAAI,CAACD,QAAQ,CAAC;EACnBZ,uBAAuB,CAACK,MAAM,CAAC,CAACS,KAAK,CAAC,IAAI,EAAEH,IAAI,CAAC;AACnD;AAEA,MAAMI,eAAe,GAAIC,IAAS,IAAK;EACrC,IAAI;IACF,OAAOC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC;EACzB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAOH,IAAI,CAAC,CAAC;EACf;AACF,CAAC;AAED,MAAMI,iBAAiB,GAAIJ,IAAS,IAAK;EACvC,KAAK,MAAMK,GAAG,IAAIL,IAAI,EAAE;IACtB,IAAI,OAAOA,IAAI,CAACK,GAAG,CAAC,KAAK,QAAQ,IAAIL,IAAI,CAACK,GAAG,CAAC,KAAK,IAAI,EAAE;MACvD;MACAL,IAAI,CAACK,GAAG,CAAC,GAAGD,iBAAiB,CAACJ,IAAI,CAACK,GAAG,CAAC,CAAC;IAC1C,CAAC,MAAM,IAAI,OAAOL,IAAI,CAACK,GAAG,CAAC,KAAK,QAAQ,EAAE;MACxC;MACAL,IAAI,CAACK,GAAG,CAAC,GAAGN,eAAe,CAACC,IAAI,CAACK,GAAG,CAAC,CAAC;IACxC,CAAC,MAAM;MACL;MACAL,IAAI,CAACK,GAAG,CAAC,GAAGC,MAAM,CAACN,IAAI,CAACK,GAAG,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC;IAC7C;EACF;EAEA,OAAOP,IAAI;AACb,CAAC;AAKD,MAAMQ,QAAyB,GAAG,CAAC,CAAC;AAEpC,IAAIC,aAAa,GAAG;EAEhB;EACAC,4BAA4B,EAAE1B,uBAAuB,CAAC0B,4BAA4B;EAElF;EACAC,4BAA4B,EAAE3B,uBAAuB,CAAC2B,4BAA4B;EAElF;EACAC,WAAW,EAAE,SAAAA,CAAUC,SAAiB,EAAEC,OAA4B,EAAE;IACtE,IAAIhC,oBAAoB,EAAE;MACxB,MAAMiC,YAAY,GAAGjC,oBAAoB,CAAC8B,WAAW,CAACC,SAAS,EAAEC,OAAO,CAAC;MACzEN,QAAQ,CAACK,SAAS,CAAC,GAAGE,YAAY;IACpC;EACF,CAAC;EAED;EACAC,cAAc,EAAE,SAAAA,CAAUH,SAAiB,EAAE;IACzCL,QAAQ,CAACK,SAAS,CAAC,CAACI,MAAM,CAAC,CAAC;EAChC,CAAC;EAED;AACJ;AACA;AACA;EACKC,cAAc,EAAE,SAAAA,CAAUtB,QAA+C,EAAE;IAC1EF,gBAAgB,CAAC,gBAAgB,EAAE,IAAI,EAAEE,QAAQ,CAAC;EACpD,CAAC;EAGD;AACJ;AACA;AACA;EACKuB,6BAA6B,EAAE,SAAAA,CAAUvB,QAA+C,EAAE;IACvFF,gBAAgB,CAAC,+BAA+B,EAAE,IAAI,EAAEE,QAAQ,CAAC;EACpE,CAAC;EAEF;AACJ;AACA;AACA;AACA;EACMwB,4BAA4B,EAAE,SAAAA,CAAUC,kBAA0B,EAAE;IACpErC,uBAAuB,CAACoC,4BAA4B,CAACC,kBAAkB,CAAC;EAC1E,CAAC;EAGD;;EAEA;AACJ;AACA;AACA;EACIC,mBAAmB,EAAE,SAAAA,CAAUC,uBAAgC,EAAE;IAC/DvC,uBAAuB,CAACsC,mBAAmB,CAACC,uBAAuB,CAAC;EACtE,CAAC;EAED;AACJ;AACA;AACA;EACIC,wBAAwB,EAAE,SAAAA,CAAU5B,QAA+C,EAAE;IACjFF,gBAAgB,CAAC,0BAA0B,EAAE,IAAI,EAAEE,QAAQ,CAAC;EAChE,CAAC;EAED;;EAEA;AACJ;AACA;AACA;EACI6B,kBAAkB,EAAE,SAAAA,CAAU7B,QAA+C,EAAE;IAC3EF,gBAAgB,CAAC,oBAAoB,EAAE,IAAI,EAAEE,QAAQ,CAAC;EAC1D,CAAC;EAED;AACJ;AACA;AACA;EACI8B,kBAAkB,EAAE,SAAAA,CAAUC,KAAa,EAAE;IAC3C3C,uBAAuB,CAAC0C,kBAAkB,CAACC,KAAK,CAAC;EACnD,CAAC;EAEA;AACL;AACA;EACIC,sBAAsB,EAAE,SAAAA,CAAUC,gBAAwB,EAAEjC,QAA+C,EAAE;IAC3G;IACA,MAAMkC,UAAU,GAAG1B,iBAAiB,CAACyB,gBAAgB,CAAC;IACtDrC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEQ,IAAI,CAAC8B,SAAS,CAACD,UAAU,CAAC,CAAC;IAC7DpC,gBAAgB,CAAC,wBAAwB,EAAE,CAACO,IAAI,CAAC8B,SAAS,CAACD,UAAU,CAAC,CAAC,EAAElC,QAAQ,CAAC;EAClF,CAAC;EAEHoC,mDAAmD,EAAE,SAAAA,CAAUC,WAAoB,EAAEC,WAAoB,EAAEC,WAAoB,EAAE;IAC/HnD,uBAAuB,CAACgD,mDAAmD,CAACC,WAAW,EAAEC,WAAW,EAAEC,WAAW,CAAC;EACpH,CAAC;EAED;EACAC,uBAAuB,EAAE,SAAAA,CAAUvB,SAAiB,EAAEC,OAA4B,EAAElB,QAA6C,EAAE;IACjI,IAAId,oBAAoB,EAAE;MACxB,MAAMiC,YAAY,GAAGjC,oBAAoB,CAAC8B,WAAW,CAACC,SAAS,EAAEC,OAAO,CAAC;MACzElB,QAAQ,CAACmB,YAAY,CAAC;IACxB;EACF;AACJ,CAAC;AAEDsB,MAAM,CAACC,OAAO,GAAG7B,aAAa","ignoreList":[]}